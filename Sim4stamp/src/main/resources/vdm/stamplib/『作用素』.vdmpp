class 『作用素』

--
--   sim4stamp - The simulation tool for STAMP/STPA
--   Copyright (C) 2017  Keiichi Tsumuta
--
--   This program is free software: you can redistribute it and/or modify
--   it under the terms of the GNU General Public License as published by
--   the Free Software Foundation, either version 3 of the License, or
--   (at your option) any later version.
--
--   This program is distributed in the hope that it will be useful,
--   but WITHOUT ANY WARRANTY; without even the implied warranty of
--   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--   GNU General Public License for more details.
--
--   You should have received a copy of the GNU General Public License
--   along with this program.  If not, see <http:--www.gnu.org/licenses/>.
--

types
	public 「構成種別」 = <コントローラ> | <アクチュエータ> | <制御対象> | <センサ> | <外部パラメータ>;

values

instance variables
	public i要素ID : seq of char;
	public i構成種別 : 「構成種別」;
	public iCtl : ovt_ctl_lib_CtlTool;

operations
	public init : seq of char * 「構成種別」 ==> ()
	init(id,ctl) ==
	(
		i要素ID := id;
		i構成種別 := ctl;
		iCtl := new ovt_ctl_lib_CtlTool();
	);
	
	public getData : seq of char ==> real
	getData(key) ==
	(dcl val : real := iCtl.getInputValue(i要素ID, key);
		--IO`print("getData:");IO`print(key);IO`print(":");IO`println(val);
		return val;
	);
		
	public setData : seq of char * real ==> ()
	setData(key, data) ==
	(dcl 値 : real := data;
		--IO`print("setData:");IO`print(i構成種別);IO`print(":");IO`print(key);IO`print(",");IO`println(値);
		return iCtl.setValue(i要素ID, key, 値);
	);
	
	public getIntData : seq of char ==> int
	getIntData(key) ==
	(dcl val : int := iCtl.getInputIntValue(i要素ID, key);
		--IO`print("getData:");IO`print(key);IO`print(":");IO`println(val);
		return val;
	);
		
	public setIntData : seq of char * int ==> ()
	setIntData(key, data) ==
	(dcl 値 : int := data;
		--IO`print("setData:");IO`print(i構成種別);IO`print(":");IO`print(key);IO`print(",");IO`println(値);
		return iCtl.setIntValue(i要素ID, key, 値);
	);
	
	public getBoolData : seq of char ==> bool
	getBoolData(key) ==
	(dcl val : bool := iCtl.getInputBoolValue(i要素ID, key);
		--IO`print("getData:");IO`print(key);IO`print(":");IO`println(val);
		return val;
	);
		
	public setBoolData : seq of char * bool ==> ()
	setBoolData(key, data) ==
	(dcl 値 : bool := data;
		--IO`print("setData:");IO`print(i構成種別);IO`print(":");IO`print(key);IO`print(",");IO`println(値);
		return iCtl.setBoolValue(i要素ID, key, 値);
	);
		
	public func : () ==> ()
	func() ==
		is subclass responsibility;

	public toString : () ==> seq of char
	toString() ==
		return i要素ID;
	
	-- 5値論理演算
	-- 対応
	public op5Equ : real ==> real
	op5Equ(value) ==
	(dcl rValue : real := 0.0;
		if value <= 0.0 then
		(
			rValue := 0.0
		)else if value > 5.0 then
		(
		  rValue := 5.0;
		)else if value < 1.0 then
		(
		  rValue := 1.0;
		)else(
			rValue := value;
		);
		return rValue
	);
	-- 反転
	public op5Inv : real ==> real
	op5Inv(value) ==
	(dcl rValue : real := 0.0;
		if value <= 0.0 then
		(
			rValue := 0.0
		)else if value > 5.0 then
		(
		  rValue := 1.0;
		)else if value < 1.0 then
		(
		  rValue := 5.0;
		)else(
			rValue := 6.0 - value;
		);
		return rValue
	);
	-- OR
	public op5OR : real * real ==> real
	op5OR(valueA, valueB) ==
	(dcl rValue : real := valueA * valueB;
		if rValue <= 0.0 then
		(
			if valueA >= 4.5 or valueB >= 4.5
			then return 5.0
			else return 0.0;
		);
		if valueA > valueB
		then rValue := valueA
		else rValue := valueB;
		return rValue;
	);
	-- AND
	public op5AND : real * real ==> real
	op5AND(valueA, valueB) ==
	(dcl rValue : real := valueA * valueB;
		if rValue <= 0.0 then
		(
			if (valueA <> 0.0 and valueA < 1.5) or (valueB <> 0.0 and valueB < 1.5)
			then return 1.0
			else return 0.0;
		);
		if valueA < valueB
		then rValue := valueA
		else rValue := valueB;
		return rValue;
	);
	-- 差分
	public op5Diff : real * real ==> real
	op5Diff(valueA, valueB) ==
	(dcl rValue : real := 0.0;
		if (valueA * valueB) <= 0.0 then return 0.0;
		let	diff : real = valueB - valueA
		in(
			if diff = 0.0 then return 3.0;
			
			if diff < 0.0 then
			(
				rValue := 2.999 + diff / 2.0;
			)else(
				rValue := 3.001 + diff / 2.0;
			);
		);
		return rValue;
	);
	-- 正規化
	public op5Norm : real ==> real
	op5Norm(value) ==
	(
		if value <= 0.0 then return 0.0
		else if value < 1.5 then return 1.0
		else if value < 2.5 then return 2.0
		else if value < 3.5 then return 3.0
		else if value < 4.5 then return 4.0
		else return 5.0;
	);
	-- リミッター
	public op5Limit : real ==> real
	op5Limit(value) ==
	(
		if value = 0.0 then return 0.0
		else if value > 5.0 then return 5.0
		else if value < 1.0 then return 1.0;
		return value;
	);
	
functions

end 『作用素』